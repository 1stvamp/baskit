<?xml version="1.0" encoding="UTF-8"?>
<!-- Phing target for installing non-PEARable requirements from the web, supports caching,
versioining, gzipped tars and zips. -->
<project name="baskit.phing.targets.install_requirements" default="install">
    <property file="baskit/phing/base.properties" override="no"/>
    <taskdef name="pearinstall" classname="baskit.phing.tasks.PearInstallTask" />
    <!-- We'll need these -->
    <pearinstall name="Net_URL2" version="0.3.1"/>
    <pearinstall name="HTTP_Request2" version="2.0.0beta3"/>
    <target name="install">
        <!-- If baskit.tmpdir isn't set, use the system temp (normally /tmp) -->
        <php returnProperty="sys_tmp" function="sys_get_temp_dir" />
        <property name="baskit.tmpdir" value="${sys_tmp}" override="no"/>

        <property file="${baskit.vardir}/requirements.versions"/>
        <foreach list="${baskit.requirements}" param="req_shortname" target="install_req" delimiter=","/>
    </target>

    <target name="install_req">
        <property name="req_name" value="${baskit.requirements.${req_shortname}.name}" override="true"/>
        <property name="req_version" value="${baskit.requirements.${req_shortname}.version}" override="true"/>
        <property name="req_url" value="${baskit.requirements.${req_shortname}.url}" override="true"/>
	
	<property name="req_includename" value="${baskit.requirements.${req_shortname}.includename}" override="true" />
	<property name="req_removepath" value="${baskit.requirements.${req_shortname}.removepath}" override="true" />
	<property name="req_iszip" value="${baskit.requirements.${req_shortname}.iszip}" override="true" />
	<if>
	    <istrue value="${req_iszip}"/>
	    <then>
		<property name="req_ext" value="zip" override="true" />
	    </then>
	    <else>
		<property name="req_ext" value="tgz" override="true" />
	    </else>
	</if>

	<property name="req_cache" value="${baskit.cachedir}/${req_includename}.${req_version}.${req_ext}" override="true"/>
        <property name="req_src" value="${baskit.tmpdir}/${req_name}" override="true"/>
	<property name="req_dest" value="${baskit.partsdir}/${req_includename}" override="true"/>

        <available file="${req_dest}" property="req_dest_exists" type="dir"/>

        <if>
	    <equals arg1="${req_shortname}" arg2=""/>
	    <then>
		<!-- Blank value passed by foreach, do nothing -->
	    </then>
            <elseif>
                <!-- Check if we have the correct version installed -->
                <or>
                    <not>
                        <equals arg1="${baskit.requirements.${req_shortname}.installed_version}" arg2="${req_version}" />
                    </not>
                    <not>
                        <isset property="req_dest_exists"/>
                    </not>
                    <isfalse value="${req_dest_exists}"/>
                </or>
                <then>
                    <echo>Non-PEAR requirement '${req_name}' v${req_version} required, installing..</echo>

                    <!-- Try to use the cache if it exists -->
                    <available file="${req_cache}" property="req_cache_exists" type="file"/>
                    <if>
                        <or>
                            <not>
                                <isset property="req_cache_exists"/>
                            </not>
                            <isfalse value="${req_cache_exists}"/>
                        </or>
                        <then>
                            <!-- Cache doesn't exist, go get the tar -->
                            <httpget url="${req_url}" dir="${baskit.cachedir}" filename="${req_includename}.${req_version}.${req_ext}"/>
                        </then>
                        <else>
                            <echo>Using ${req_cache}</echo>
                        </else>
		    </if>
		    <if>
			<istrue value="${req_iszip}" />
			<then>
			    <unzip file="${req_cache}" todir="${baskit.partsdir}" />
			</then>
			<else>
			    <untar file="${req_cache}" todir="${req_dest}" removepath="${req_removepath}" />
			</else>
		    </if>

                    <!-- Write the installed version out to a property file -->
		    <echo file="${baskit.vardir}/requirements.versions" append="true">baskit.requirements.${req_shortname}.installed_version=${req_version}
</echo>
                </then>
            </elseif>
            <else>
                <echo>Non-PEAR requirement '${req_name}' v${req_version} already installed at ${req_dest}, skipping..</echo>
            </else>
        </if>
    </target>
</project>
